#!/bin/bash

# Checks that Amazon links have the correct tracking ID for this blog.

# Exit on first failing command.
set -e
# Exit on unset variable.
set -u

BUILD_DIR=public

echo "Checking Amazon OneLink tags..."
ONELINK_DIV='<div id="amzn-assoc-ad-1b864722-ce8b-45d9-89b5-0c7b92a1d87b"></div>'
if (($(grep "$ONELINK_DIV" "$BUILD_DIR" -R | wc -l) < 150)); then
  echo "ERROR: OneLink <div> didn't appear in enough pages!";
  exit 1;
fi

ONELINK_SCRIPT='<script async src="//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US&adInstanceId=1b864722-ce8b-45d9-89b5-0c7b92a1d87b"></script>'
if (($(grep "$ONELINK_SCRIPT" "$BUILD_DIR" -R | wc -l) < 150)); then
  echo "ERROR: OneLink <script> didn't appear in enough pages!";
  exit 1;
fi

# Exits if we're doing a quick build.
if [ "${1-}" = "--quick" ]; then
  echo "Skipping Amazon link check..."
  exit 0;
fi

echo "Checking Amazon links..."
AMAZON_AFFILIATE_ID=mtlynch-20

shortlinks=$(
  egrep \
    --dereference-recursive \
    --only-matching \
    --no-filename \
    --binary-files=without-match \
    "https?://amzn.to/[^\?\&\"\)]+" \
    "$BUILD_DIR" | uniq
  )
echo $(echo "$shortlinks" | wc -l) " Amazon links to check"

for url in $shortlinks; do
  url_effective=$(
    curl $url \
      --silent \
      --location \
      --head \
      --output /dev/null \
      --write-out '%{url_effective}'
   )
  if ! echo "$url_effective" | grep $AMAZON_AFFILIATE_ID; then
    echo "ERROR: Amazon URL missing expected" \
         "affiliate ID (${AMAZON_AFFILIATE_ID}): $url -> $url_effective";
    exit 1;
  fi
done
